{"ast":null,"code":"var _jsxFileName = \"D:\\\\FINKI\\\\3god\\\\emt\\\\lab2\\\\web\\\\frontend\\\\src\\\\components\\\\Books\\\\BookEdit\\\\bookEdit.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BookEdit = props => {\n  _s();\n\n  const navigate = useNavigate();\n  const [formData, updateFormData] = React.useState({\n    name: \"\",\n    category: 0,\n    author: 0,\n    availableCopies: 0\n  });\n\n  const handleChange = e => {\n    updateFormData({ ...formData,\n      [e.target.name]: e.target.value.trim()\n    });\n  };\n\n  const onFormSubmit = e => {\n    e.preventDefault();\n    const name = formData.name !== \"\" ? formData.name : props.books.name;\n    const category = formData.category !== 0 ? formData.category : props.books.category.id;\n    const author = formData.author !== 0 ? formData.author : props.books.author.id;\n    const availableCopies = formData.availableCopies !== 0 ? formData.availableCopies : props.books.availableCopies;\n    props.onEditBook(props.books.id, name, category, author, availableCopies);\n    navigate(\"/books\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row mt-5\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-md-5\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: onFormSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"Book name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            id: \"name\",\n            name: \"name\",\n            placeholder: props.books.name,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"category\",\n            className: \"form-control\",\n            onChange: handleChange,\n            children: props.categories.map(term => {\n              if (props.books.category !== undefined && props.books.category.id === term.id) return /*#__PURE__*/_jsxDEV(\"option\", {\n                selected: props.books.category.id,\n                value: term.id,\n                children: term.name\n              }, term.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 44\n              }, this);else return /*#__PURE__*/_jsxDEV(\"option\", {\n                value: term.id,\n                children: term.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 45\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Manufacturer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"author\",\n            className: \"form-control\",\n            onChange: handleChange,\n            children: props.authors.map(term => {\n              if (props.books.author !== undefined && props.books.author.id === term.id) return /*#__PURE__*/_jsxDEV(\"option\", {\n                selected: props.books.author.id,\n                value: term.id,\n                children: term.name\n              }, term.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 44\n              }, this);else return /*#__PURE__*/_jsxDEV(\"option\", {\n                value: term.id,\n                children: term.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 45\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"price\",\n            children: \"Available Copies\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            id: \"availableCopies\",\n            name: \"availableCopies\",\n            placeholder: props.books.availableCopies,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"submit\",\n          type: \"submit\",\n          className: \"btn btn-primary\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n\n_s(BookEdit, \"f1moioGyCriz014AmNC6O9WC2OU=\", false, function () {\n  return [useNavigate];\n});\n\n_c = BookEdit;\nexport default BookEdit;\n\nvar _c;\n\n$RefreshReg$(_c, \"BookEdit\");","map":{"version":3,"sources":["D:/FINKI/3god/emt/lab2/web/frontend/src/components/Books/BookEdit/bookEdit.js"],"names":["React","useNavigate","BookEdit","props","navigate","formData","updateFormData","useState","name","category","author","availableCopies","handleChange","e","target","value","trim","onFormSubmit","preventDefault","books","id","onEditBook","categories","map","term","undefined","authors"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {useNavigate} from 'react-router-dom';\r\n\r\nconst BookEdit = (props) => {\r\n\r\n    const navigate = useNavigate();\r\n    const [formData, updateFormData] = React.useState({\r\n        name: \"\",\r\n        category: 0,\r\n        author: 0,\r\n        availableCopies: 0\r\n    })\r\n\r\n    const handleChange = (e) => {\r\n        updateFormData({\r\n            ...formData,\r\n            [e.target.name]: e.target.value.trim()\r\n        })\r\n    }\r\n\r\n    const onFormSubmit = (e) => {\r\n        e.preventDefault();\r\n        const name = formData.name !== \"\" ? formData.name : props.books.name;\r\n        const category = formData.category !== 0 ? formData.category : props.books.category.id;\r\n        const author = formData.author !== 0 ? formData.author : props.books.author.id;\r\n        const availableCopies = formData.availableCopies !== 0 ? formData.availableCopies : props.books.availableCopies;\r\n\r\n        props.onEditBook(props.books.id, name, category,author,availableCopies);\r\n        navigate(\"/books\");\r\n    }\r\n\r\n    return(\r\n        <div className=\"row mt-5\">\r\n            <div className=\"col-md-5\">\r\n                <form onSubmit={onFormSubmit}>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"name\">Book name</label>\r\n                        <input type=\"text\"\r\n                               className=\"form-control\"\r\n                               id=\"name\"\r\n                               name=\"name\"\r\n                               placeholder={props.books.name}\r\n                               onChange={handleChange}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Category</label>\r\n                        <select name=\"category\" className=\"form-control\" onChange={handleChange}>\r\n                            {props.categories.map((term) => {\r\n                                if(props.books.category !== undefined &&\r\n                                    props.books.category.id === term.id)\r\n                                    return <option selected={props.books.category.id} key={term.id} value={term.id}>{term.name}</option>\r\n                                else return <option value={term.id}>{term.name}</option>\r\n                            })}\r\n                        </select>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Manufacturer</label>\r\n                        <select name=\"author\" className=\"form-control\" onChange={handleChange}>\r\n                            {props.authors.map((term) => {\r\n                                if(props.books.author !== undefined &&\r\n                                    props.books.author.id === term.id)\r\n                                    return <option selected={props.books.author.id} key={term.id} value={term.id}>{term.name}</option>\r\n                                else return <option value={term.id}>{term.name}</option>\r\n                            })}\r\n                        </select>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"price\">Available Copies</label>\r\n                        <input type=\"text\"\r\n                               className=\"form-control\"\r\n                               id=\"availableCopies\"\r\n                               name=\"availableCopies\"\r\n                               placeholder={props.books.availableCopies}\r\n                               onChange={handleChange}\r\n                        />\r\n                    </div>\r\n\r\n                    <button id=\"submit\" type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BookEdit;\r\n"]},"metadata":{},"sourceType":"module"}